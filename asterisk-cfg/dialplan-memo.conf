Fonctions du dialplan
=====================

Pour avoir de l'aide sur une application :
> core show application GotoIf

Récupérer l'extension : ${EXTEN}
Pour récupérer l'extension SANS les 2 premiers chiffres : ${EXTEN:2}
Pour récupérer les 3 derniers chiffres : ${EXTEN:-3}
Je skippe le premier chiffre et je prends les 3 suivants : ${EXTEN:1:3}

${variable[:skip[docs::length]}

CallerID
********
Pour préfixer un callerID :
Set(CALLERID(name)=STD Sales ${CALLERID(name)})
Pour forcer une présentation du numéro :
Set(CALLERID(number)=0699089242)


GotoIf :
********
- comparaison de nombres :

GotoIf(${XIVO_ENABLEUNC}=1?FWD:NOFWD)
GotoIf(${PEERCURCALL}>=1?STD:NOSTD)

- comparaison des chaines de caractères

same = n,GotoIf($[${XIVO_FWD_INCALL_ANSWER_ACTION}=user]?VOICEMAIL:NOTHING)

- pour comparer la taille d'une chaine :
Pour compter la taille d'une chaine : ${LEN(${XIVO_TRUC})}
same = n,GotoIf(${LEN(${XIVO_DSTNUM})}>4?continuethree:return)

Playback ou Background
**********************
Il faut que le fichier soit dans le répertoire /usr/share/asterisk/sounds/
Playback(fichier)   ; NE PAS mettre l'extension .wav
Exemple : Playback(find-user)  ; lecture de la phrase "nous recherchons votre correspondant, merci de patienter qq instants
Si on veut faire par langue, mettre dans le sous-répertoire "en" ou "fr" et faire
Set(CHANNEL(language)=en)


MilliWatt
*********
exten = 999,1,Answer()
same = n,MilliWatt()
same = n,Hangup()


Queue
*****
Ne pas oublier de faire un Answer() avant d'appeller Queue()
same = n,Answer()
same = n,Queue(std,,,,30)

Si on veut une moh variable, mettre cela avant l'appel à Queue()
Set(CHANNEL(musicclass)=whatever)

Goto
****
Goto(default,0184172479,1)
NE PAS METTRE d'espace dans les arguments !!!

Gosub
*****
Idem que Goto, sauf qu'il revient au point d'appel de Gosub quand il a fini d'exécuter la sous-routine (à confirmer)
On peut mettre des arguments en plus après la priorité:
Gosub(forward,s,1(${XIVO_FWD_INCALL_ANSWER_ACTION},${XIVO_FWD_INCALL_ANSWER_ACTIONARG1},${XIVO_FWD_INCALL_ANSWER_ACTIONARG2}))
dans la sous-routine, les arguments en plus seront ${ARG1}, ${ARG2}, etc...

Exemple pour renvoyer vers un utilisateur :
Gosub(forward,s,1(user,3))  où 3 est l'ID de l'utilisateur
Cela va au final renvoyer vers le contexte user avec ${ARG1} = 3


Dial
****
Dial(SIP/iop89U,15,hHtw)
h et H : autorise l'appelant et l'appelé à raccrocher ac séq DTMF
t : autoriser le trf ac séq DTMF
w : autorise l'appelé à enregistrer l'appel via séq DTMF

Pour appeler via un trunk SIP :
Dial(SIP/ovh/0141981242,60)

Voicemail
*********
same = n,Voicemail(60@default,u)

Intercom
********
Testé avec Yealink fixes:
same = n,SIPAddHeader(Call-info: answer-after=0)
same = n,Dial(SIP/wme2sf,5)

Il faut aussi penser à activer la fonction dans le fichier de config des tels Yealink:
features.intercom.allow = 1
features.intercom.mute = 0
features.intercom.tone = 1


DEVICE_STATE
************
On ne peut pas l'appeler via Local/ il faut utiliser SIP/
same = n,NoOp(DEVICE_STATE 413 = ${DEVICE_STATE(SIP/upcirf)})
same = n,GotoIf($[${DEVICE_STATE(SIP/upcirf)}=UNAVAILABLE]?skip:continue)

Sur des BLF virtuelles :

exten = *4212,hint,Custom:CLOSETIME

Set(DEVICE_STATE(Custom:*4242)=INUSE)
Set(DEVICE_STATE(Custom:*4242)=NOT_INUSE)

CLI:
- Pour voir l'état :
> core show hint *4242
- Pour changer l'état :
> devstate change Custom:*4242 INUSE
> devstate change Custom:*4242 NOT_INUSE

ATTENTION : Si on met dans XIVO une touche utilisateur avec Type = Personnalisé et Destination *4242, alors xivo va automatiquement définir dans le dialplan un "exten = *4242,hint,Custom:*4242" ; il ne faut pas le définir nous-même dans le dialplan

Aastra :
prgkey4 type: blfxfer
prgkey4 value: *4212

Yealink :
memorykey.8.line = 1
memorykey.8.value = *4212
memorykey.8.type = 16
memorykey.8.label = STD

CONCRETEMENT, voilà un code d'exemple pour une touche personnalisée qui active/desactive une certaine fonction:
[default]
exten = *4242 ,1,NoOp(Test BLF STD = ${DEVICE_STATE(Custom:*4242)})
; INUSE = rouge = STD fermé
same = n,GotoIf($[${DEVICE_STATE(Custom:*4242)}=INUSE]?TOOPEN:TOCLOSE)
same = n(TOCLOSE),Set(DEVICE_STATE(Custom:*4242)=INUSE)
same = n,NoOp(Set to INUSE = ${DEVICE_STATE(Custom:*4242)})
same = n,Playback(std-ferme)
same = n,Hangup()
same = n(TOOPEN),Set(DEVICE_STATE(Custom:*4242)=NOT_INUSE)
same = n,NoOp(Set to NOT_INUSE = ${DEVICE_STATE(Custom:*4242)})
same = n,Playback(std-ouvert)
same = n,Hangup()

Et voilà un exemple de l'utilisation de cette touche pour un appel au standard:
[standard]
exten = 123,1,NoOp(APPEL AU STANDARD)
same = n,Answer()
same = n,NoOp(BLF STD custom *4242 = ${DEVICE_STATE(Custom:*4242)})
same = n,GotoIf($[${DEVICE_STATE(Custom:*4242)}=INUSE]?CLOSED:OPEN)
same = n(CLOSED),Voicemail(10@default,u)
same = n,Hangup()
same = n(OPEN),Goto(default,200,1)
same = n,Hangup()

AddQueueMember
**************
same => n,AddQueueMember(queuename[,interface[,penalty[,options[,membername[,stateinterface]]]]])
AddQueueMember(support,${MemberChannel},${QueuePenalty},,${MemberName})

En CLI :
> queue 

RemoveQueueMember
*****************
RemoveQueueMember(queuename[|interface])
Exemple :
RemoveQueueMember(sdemtest,Agent/21)

En CLI :
> queue remove member Local/id-1@agentcallback from sdemtest

Connaissance des AGIs XIVO
==========================
Emplacement : /usr/share/pyshared/xivo_agid/modules/

Exemple d'appel :
same = n,AGI(agi://${XIVO_AGID_IP}/check_schedule)

incoming_did_set_features
*************************
Déclanché sur un appel entrant, permet de lire l'appel entrant
En sortie, on récupère :
XIVO_FWD_INCALL_ANSWER_ISDA = user (si la SDA pointe vers un user)
XIVO_FWD_INCALL_ANSWER_ACTIONARG1 = ID de l'utilisateur

phone_get_features
******************
En entrée, il lit XIVO_USERID
En sortie, on récupère :
XIVO_ENABLEDND
XIVO_ENABLEUNC
XIVO_DESTUNC   (=> Goto(default,${XIVO_DESTUNC},1))

user_get_vmbox
**************
Permet d'obtenir la boite vocale associée à un utilisateur
En entrée, il lit : XIVO_USERID
En sortie, on récupère :
- XIVO_MAILBOX : numéro de la mailbox
- XIVO_MAILBOX_CONTEXT : contexte de la mailbox
SI l'utilisateur n'a pas de voicemail, on ne récupère rien... et pire, il fait un Goto "agi_fail,s,1"
same = n,Voicemail(${XIVO_MAILBOX}@${XIVO_MAILBOX_CONTEXT},u)

outgoing_user_set_features
**************************
Permet de mettre le callerID
En entrée, il lit : XIVO_USERID, XIVO_DSTID (mettre 2, je ne sais pas pourquoi... c le numéro du contexte to-extern ??), XIVO_DSTNUM (=numéro de tel destination)
Il fait la maj du callerid(all) tout seul.

check_schedule
**************
En entrée, on ne donne pas directement l'ID de l'horaire, mais on donne par exemple une queue sur laquelle l'horaire est configuré
Set(XIVO_PATH=queue)
Set(XIVO_PATH_ID=1)
Pour savoir ce qu'on peut mettre dans le champ XIVO_PATH, regarder la table schedule_path (champ "path") dans la DB asterisk. Les valeurs habituelles sont :
- incall
- queue
- user
- group (à vérifier)
En sortie :
- XIVO_SCHEDULE_STATUS = opened ou closed
exemple:
same = n,GotoIf($[${XIVO_SCHEDULE_STATUS}=closed]?SALESCLOSED:SALESOPEN)


AstDB
=====
Il n'y a pas besoin de créer explicitement une base de donnée. Le simple fait d'entrer une clé va créer la base correspondante
Pour voir la correspondance clé <-> valeur :
> database show dbname

Pour mettre la SDA 0252430012 sur l'ID Médecin 5, taper dans le prompt Asterisk :
> database put dbname clé valeur
Exemple :
> database put medecin 0252430012 5

Pour supprimer la SDA 0252430012, taper dans le prompt Asterisk :
> database del dbname clé
Exemple :
> database del medecin 0252430012

Pour lire une entrée de l'AstDB depuis le Dialplan :
DB(dbname/clé)

same = n,Set(IDMEDECIN=${DB(medecin/${XIVO_EXTENPATTERN})})

Macro
=====
Pour définir la macro "shortnumbers" :
[macro-shortnumbers]
exten = s,1,NoOp(Starting macro with exten = ${MACRO_EXTEN})
same = n,Set(CONNECTEDLINE(name,i)=${ARG2})
same = n,Set(CONNECTEDLINE(name-pres,i)=allowed)
same = n,Set(CONNECTEDLINE(num,i)=${ARG1})
same = n,Set(CONNECTEDLINE(num-pres)=allowed)
same = n,Goto(to-extern,${ARG1},1)
same = n,Hangup()
same = n,Return()


Pour appeler la macro :

same = n,Macro(name,ARG1,ARG2,ARG3,...)

EXEMPLE :
exten = 5050,1,Macro(shortnumbers,0699089245,Alexis de Lattre)


